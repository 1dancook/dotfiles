set-option -g default-terminal screen-256color
set-option -g default-terminal xterm-kitty
set-option -g prefix C-b

# History
set -g history-limit 10000

# Window numbers from 1, not from 0, renumber if closed
set -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on # automatic renumber windows
set -g remain-on-exit off

set -g display-time 3000 # display time for messages

# Quick Escape (for vim)
set -s escape-time 0

# reload the tmux.conf file with Prefix C
bind-key -n M-C source-file ~/.tmux.conf\; display "Reloaded ~/.tmux.conf"

# tmux things
bind-key -n M-s choose-tree -Zs
bind-key -n M-w choose-tree -Zw


# Hotkeys using Alt/Option as a modifier
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-N command-prompt -p "New Session Name >" "new-session -c ~ -s '%%'" # make a new session starting in home dir
bind-key -n M-d detach-client
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-H select-window -t :-
bind-key -n M-L select-window -t :+
bind-key -n "M-'" last-window

bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1
bind-key -n M-X confirm-before "kill-window"
bind-key -n M-- split-window -v -c "#{pane_current_path}"
bind-key -n M-\\ split-window -h -c "#{pane_current_path}"
bind-key -n M-r command-prompt -I "#W" "rename-window '%%'"
bind-key -n M-R command-prompt -I "#S" "rename-session '%%'"

# switch between sessions
bind-key -n M-J switch-client -p # previous session
bind-key -n M-K switch-client -n # next session
bind-key -n M-Tab switch-client -l # last session

bind-key -n M-f resize-pane -Z
bind-key -n M-q display-panes -d 2500 # 3 seconds
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
bind-key -n "M-;" last-pane  # previously active pane
bind-key -n M-Left resize-pane -L 5
bind-key -n M-Right resize-pane -R 5
bind-key -n M-Up resize-pane -U 5
bind-key -n M-Down resize-pane -D 5
bind-key -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n M-p display-message -d 0 -N "Choose Window to send Pane to" \; choose-window 'join-pane -h -t "%%"'
bind-key -n M-P break-pane # send to its own window

bind-key -n M-x confirm-before "kill-pane"
# selecting layout
set -g main-pane-height 70%
set -g main-pane-width 60%
bind-key -n "M-Space" next-layout
bind-key -n "M-!" select-layout "even-horizontal"
bind-key -n "M-@" select-layout "even-vertical"
bind-key -n "M-#" select-layout "main-horizontal"
bind-key -n "M-$" select-layout "main-vertical"
bind-key -n "M-%" select-layout "tiled"


# switch to another session and quit current one
# be careful no confirmation!
set -g detach-on-destroy off # will attempt to switch to most recent active session
bind-key -n M-Q run-shell 'session=`tmux display-message -p "#S"`; tmux kill-session -t ${session}; tmux choose-tree -Zs; tmux display "Killed Session: ${session}"'
# somehow the M-Q bind isn't working properly - maybe something to do with the switch-client
#tmux switch-client -l;


bind-key -n M-[ copy-mode

# ---------------
# Custom Commands / Scripts 
bind-key -n M-c popup -w 68 -h 12 "cal -3"  # popup calendar for current month
bind-key -n M-Enter command-prompt -p "Search DuckDuckGo >" "new-window w3m https://lite.duckduckgo.com/lite/?q='%%'&kl=us-en&df=y&r=us-en"
bind-key -n M-T display-popup "pbpaste | trans -b ja:en | less" # translate japanese to english - brief
#bind-key -n M-Space command-prompt -p "task >" "display-popup -w 90% -h 100% task %%" # for running task commands quickly
bind-key -n "M-`" switch-client -t "taskwarrior:tasksh" # quickly switch to taskwarrior shell
bind-key -n "M-Space" command-prompt -p " >" "display-popup -d '#{pane_current_path}' -w 100% -h 60% -y 1 '%%'" # disposable terminal window for one-off commands note that ESC will close it so useless for vim

# ----------------
# linux system clipboard
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# macOS system clipboard
set -g copy-command "pbpaste"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

set -g mouse on
set-option -g status-keys vi
set-option -g set-titles on
set-option -g set-titles-string 'tmux - #W'
set -g bell-action any
set-option -g visual-bell off
set-option -g set-clipboard off

setw -g mode-keys vi
setw -g monitor-activity on

# Notifications
set -g visual-activity on




# ----------VISUAL Settings----------------------------

# colors from onehalfdark
#black       = { "gui": "#282c34", "cterm": "236" }
#red         = { "gui": "#e06c75", "cterm": "168" }
#green       = { "gui": "#98c379", "cterm": "114" }
#yellow      = { "gui": "#e5c07b", "cterm": "180" }
#blue        = { "gui": "#61afef", "cterm": "75"  }
#purple      = { "gui": "#c678dd", "cterm": "176" }
#cyan        = { "gui": "#56b6c2", "cterm": "73"  }
#white       = { "gui": "#dcdfe4", "cterm": "188" }


# Status Bar Settings
set -g status-interval 1 # update status every 1 second
set -g status-position top # set status bar top

## Status Bar Colors
set -g status-style fg=white,bg=color236 # set the status line colors

### Window List
set -g status-justify left # center the window list in the status line
set -g window-status-activity-style fg=color236,bg=color180
set -g window-status-bell-style fg=colour1
set -g window-status-current-format '#[fg=color114,bg=color236]#[fg=color236,bold,bg=color114]#I・#W#[fg=color114,bg=color236]'
set -g window-status-current-style fg=color236,bold,bg=color114 # set colors for the active window
set -g window-status-format ' #I・#W '
set -g window-status-last-style fg=color75 # set colors for the active window
set -g window-status-separator " | "
set -g window-status-style fg=white # set the color of the window list

# experimental - this would change the background of the active panel
set -g window-active-style 'fg=colour250,bg=color236'

# status line left side to show session
set -g status-left-length 50
# did color114 for green bg before
set -g status-left "#[fg=color75,bg=color236]#[fg=color236,bold, bg=color75] #S #[fg=color75,bg=color236] "


# change the color of the numbers for display-panes command
set -g display-panes-colour color241
set -g display-panes-active-colour red

# status line right side - 50% | 31 Oct 13:37
# following also needs on keyboard switcher cli from
# https://github.com/myshov/xkbswitch-macosx/blob/master/bin/xkbswitch
#set -g status-right "#[fg=color11]#(xkbswitch -ge) #[fg=color236,bg=gray] #(pmset -g batt | sed -n '2p' | sed "s/.*.id=........//" | xargs echo | cut -f 1 -d ';') #[fg=color236,bg=darkgray] %b %d %R "
set -g status-right "#{?#{==:#(xkbswitch -ge),US},#[fg=yellow]#(xkbswitch -ge),#[fg=color168#,bg=black]#[fg=black#,bg=color168]#(xkbswitch -ge)#[fg=color168#,bg=black]} #[fg=gray,bg=color236]#[fg=color236,bg=gray]#(pmset -g batt | sed -n '2p' | sed "s/.*.id=........//" | xargs echo | cut -f 1 -d ';') #[fg=color236,bg=darkgray] %b %d %R "

# panes
set -g pane-active-border-style fg=color114,bg=default
#set -g pane-border-format " #{pane_index}・#{pane_current_command} "
set -g pane-border-format "#{?pane_active,#[fg=color114#,bg=color236],#[fg=color245#,bg=default]}#{?pane_active,#[fg=color236#,bold#, bg=color114],#[fg=black#,bold#,bg=color245]}#P・#{pane_current_command}#{?pane_active,#[fg=color114#,bg=color236],#[fg=color245#,bg=default]}"
set -g pane-border-lines "heavy" # a little thicker
set -g pane-border-status top
set -g pane-border-style fg=color245,bg=default

# message styles
set -g message-command-style fg=color75,bg=color236
set -g message-style fg=color236,bg=color75

## loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none




set -g @continuum-restore 'on'

# add additional programs to save in tmux resurrect here (space separated):
# see https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md
set -g @resurrect-processes 'tasksh fava w3m bat cat sc-im'

# the following are in combination with tpope-obession (session save in vim/neovim)
# and allows for vim sessions to be restored 
# see: https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
run '~/.tmux/plugins/tpm/tpm'

